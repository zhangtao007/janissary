syntax = "proto3";

package com.lanjiu.pro.login;

option java_package = "com.lanjiu.pro.login";
option java_outer_classname = "RegisterStorageProto";

service RegisterStorageService {

    //获取注册用户个人设置及基本信息
    rpc SelectUserInfomation(RequestUser) returns (ResponseUser){};

    //获取游客用户个人设置及基本信息
    rpc SelectGuestUserInfo(RequestUser)returns (ResponseUser){};

    rpc UpdateUserDevice(RequestUserDevice) returns (RequestUserDevice){};

}

message RequestUser {
    string userType =1;
    RegisterUser registerUser = 2;
    GuestUser guestUser = 3;
    string args =4;

}

message ResponseUser {
    string ret = 1;  //返回成功或失败
    string result = 2;  //返回信息
    repeated RegisterUser registerUser = 3;
    repeated GuestUser guestUser = 4;
    string userType =5;
}

//协议实体
message RegisterUser {
    string user_id = 1;
    string user_account = 2;
    string password = 3;
    string phone = 4;
    string create_time = 5;
    UserInfomation userInfomation =6;
}

message GuestUser {
    string user_id = 1;
    string user_acount = 2; //游客无账号为空
    string password = 3;     //游客无密码
    string create_time = 4;
    UserInfomation userInfomation =5;
}

message UserInfomation {
    string user_type = 1;
    string user_id = 2;
    string nickname = 3;
    string avatar = 4;
    bool off_msg_setting = 5;
    bool online_status = 6;
    string modify_time = 7;
    bool burn_after_reading_setting = 8;
    int32 burn_after_reading_time_unit = 9;
    int32 burn_after_reading_time_length = 10;
    // 是否开启退出清理
    bool exit_clean = 11;
    // 定期清理（0:每月，1:每周，2:每天）
    int32 timer_clean = 12;
    bool group_burn_after_reading_setting =13;
    int32 group_burn_after_reading_time_length =14;

}

message RequestUserDevice{
    repeated  RequestDeviceUpdate  requestDeviceUpdate= 1;
    string arg = 2;
}

message RequestDeviceUpdate{
    string user_id = 1;

    // 推送token
    string push_token = 2;

    // 设备厂商
    string manufacturer = 3;

    // 返回类型(成功/失败)详情
    string status_detail = 4;

}


